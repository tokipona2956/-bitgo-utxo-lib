// OP_RETURN {data}
var bscript = require('../script');
var types = require('../types');
var typeforce = require('typeforce');
var OPS = require('bitcoin-ops');
function check(script) {
    var buffer = bscript.compile(script);
    return buffer.length > 1 &&
        buffer[0] === OPS.OP_RETURN;
}
check.toJSON = function () { return 'null data output'; };
function encode(data) {
    // Allow arrays types since decompile returns an array too
    typeforce(typeforce.oneOf(types.Buffer, types.Array), data);
    return bscript.compile([OPS.OP_RETURN].concat(data));
}
function decode(buffer) {
    typeforce(check, buffer);
    var chunks = bscript.decompile(buffer);
    chunks.shift();
    return chunks.length === 1 ? chunks[0] : chunks;
}
module.exports = {
    output: {
        check: check,
        decode: decode,
        encode: encode
    }
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibnVsbGRhdGEuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvdGVtcGxhdGVzL251bGxkYXRhLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG1CQUFtQjtBQUVuQixJQUFJLE9BQU8sR0FBRyxPQUFPLENBQUMsV0FBVyxDQUFDLENBQUE7QUFDbEMsSUFBSSxLQUFLLEdBQUcsT0FBTyxDQUFDLFVBQVUsQ0FBQyxDQUFBO0FBQy9CLElBQUksU0FBUyxHQUFHLE9BQU8sQ0FBQyxXQUFXLENBQUMsQ0FBQTtBQUNwQyxJQUFJLEdBQUcsR0FBRyxPQUFPLENBQUMsYUFBYSxDQUFDLENBQUE7QUFFaEMsU0FBUyxLQUFLLENBQUUsTUFBTTtJQUNwQixJQUFJLE1BQU0sR0FBRyxPQUFPLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFBO0lBRXBDLE9BQU8sTUFBTSxDQUFDLE1BQU0sR0FBRyxDQUFDO1FBQ3RCLE1BQU0sQ0FBQyxDQUFDLENBQUMsS0FBSyxHQUFHLENBQUMsU0FBUyxDQUFBO0FBQy9CLENBQUM7QUFDRCxLQUFLLENBQUMsTUFBTSxHQUFHLGNBQWMsT0FBTyxrQkFBa0IsQ0FBQSxDQUFDLENBQUMsQ0FBQTtBQUV4RCxTQUFTLE1BQU0sQ0FBRSxJQUFJO0lBQ25CLDBEQUEwRDtJQUMxRCxTQUFTLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsTUFBTSxFQUFFLEtBQUssQ0FBQyxLQUFLLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQTtJQUUzRCxPQUFPLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQyxHQUFHLENBQUMsU0FBUyxDQUFDLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUE7QUFDdEQsQ0FBQztBQUVELFNBQVMsTUFBTSxDQUFFLE1BQU07SUFDckIsU0FBUyxDQUFDLEtBQUssRUFBRSxNQUFNLENBQUMsQ0FBQTtJQUV4QixJQUFJLE1BQU0sR0FBRyxPQUFPLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxDQUFBO0lBRXRDLE1BQU0sQ0FBQyxLQUFLLEVBQUUsQ0FBQTtJQUVkLE9BQU8sTUFBTSxDQUFDLE1BQU0sS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFBO0FBQ2pELENBQUM7QUFFRCxNQUFNLENBQUMsT0FBTyxHQUFHO0lBQ2YsTUFBTSxFQUFFO1FBQ04sS0FBSyxFQUFFLEtBQUs7UUFDWixNQUFNLEVBQUUsTUFBTTtRQUNkLE1BQU0sRUFBRSxNQUFNO0tBQ2Y7Q0FDRixDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiLy8gT1BfUkVUVVJOIHtkYXRhfVxuXG52YXIgYnNjcmlwdCA9IHJlcXVpcmUoJy4uL3NjcmlwdCcpXG52YXIgdHlwZXMgPSByZXF1aXJlKCcuLi90eXBlcycpXG52YXIgdHlwZWZvcmNlID0gcmVxdWlyZSgndHlwZWZvcmNlJylcbnZhciBPUFMgPSByZXF1aXJlKCdiaXRjb2luLW9wcycpXG5cbmZ1bmN0aW9uIGNoZWNrIChzY3JpcHQpIHtcbiAgdmFyIGJ1ZmZlciA9IGJzY3JpcHQuY29tcGlsZShzY3JpcHQpXG5cbiAgcmV0dXJuIGJ1ZmZlci5sZW5ndGggPiAxICYmXG4gICAgYnVmZmVyWzBdID09PSBPUFMuT1BfUkVUVVJOXG59XG5jaGVjay50b0pTT04gPSBmdW5jdGlvbiAoKSB7IHJldHVybiAnbnVsbCBkYXRhIG91dHB1dCcgfVxuXG5mdW5jdGlvbiBlbmNvZGUgKGRhdGEpIHtcbiAgLy8gQWxsb3cgYXJyYXlzIHR5cGVzIHNpbmNlIGRlY29tcGlsZSByZXR1cm5zIGFuIGFycmF5IHRvb1xuICB0eXBlZm9yY2UodHlwZWZvcmNlLm9uZU9mKHR5cGVzLkJ1ZmZlciwgdHlwZXMuQXJyYXkpLCBkYXRhKVxuXG4gIHJldHVybiBic2NyaXB0LmNvbXBpbGUoW09QUy5PUF9SRVRVUk5dLmNvbmNhdChkYXRhKSlcbn1cblxuZnVuY3Rpb24gZGVjb2RlIChidWZmZXIpIHtcbiAgdHlwZWZvcmNlKGNoZWNrLCBidWZmZXIpXG5cbiAgdmFyIGNodW5rcyA9IGJzY3JpcHQuZGVjb21waWxlKGJ1ZmZlcilcblxuICBjaHVua3Muc2hpZnQoKVxuXG4gIHJldHVybiBjaHVua3MubGVuZ3RoID09PSAxID8gY2h1bmtzWzBdIDogY2h1bmtzXG59XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBvdXRwdXQ6IHtcbiAgICBjaGVjazogY2hlY2ssXG4gICAgZGVjb2RlOiBkZWNvZGUsXG4gICAgZW5jb2RlOiBlbmNvZGVcbiAgfVxufVxuIl19