// {signature}
var bscript = require('../../script');
var typeforce = require('typeforce');
function check(script) {
    var chunks = bscript.decompile(script);
    return chunks.length === 1 &&
        bscript.isCanonicalSignature(chunks[0]);
}
check.toJSON = function () { return 'pubKey input'; };
function encodeStack(signature) {
    typeforce(bscript.isCanonicalSignature, signature);
    return [signature];
}
function encode(signature) {
    return bscript.compile(encodeStack(signature));
}
function decodeStack(stack) {
    typeforce(check, stack);
    return stack[0];
}
function decode(buffer) {
    var stack = bscript.decompile(buffer);
    return decodeStack(stack);
}
module.exports = {
    check: check,
    decode: decode,
    decodeStack: decodeStack,
    encode: encode,
    encodeStack: encodeStack
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5wdXQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvdGVtcGxhdGVzL3B1YmtleS9pbnB1dC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxjQUFjO0FBRWQsSUFBSSxPQUFPLEdBQUcsT0FBTyxDQUFDLGNBQWMsQ0FBQyxDQUFBO0FBQ3JDLElBQUksU0FBUyxHQUFHLE9BQU8sQ0FBQyxXQUFXLENBQUMsQ0FBQTtBQUVwQyxTQUFTLEtBQUssQ0FBRSxNQUFNO0lBQ3BCLElBQUksTUFBTSxHQUFHLE9BQU8sQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDLENBQUE7SUFFdEMsT0FBTyxNQUFNLENBQUMsTUFBTSxLQUFLLENBQUM7UUFDeEIsT0FBTyxDQUFDLG9CQUFvQixDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFBO0FBQzNDLENBQUM7QUFDRCxLQUFLLENBQUMsTUFBTSxHQUFHLGNBQWMsT0FBTyxjQUFjLENBQUEsQ0FBQyxDQUFDLENBQUE7QUFFcEQsU0FBUyxXQUFXLENBQUUsU0FBUztJQUM3QixTQUFTLENBQUMsT0FBTyxDQUFDLG9CQUFvQixFQUFFLFNBQVMsQ0FBQyxDQUFBO0lBQ2xELE9BQU8sQ0FBQyxTQUFTLENBQUMsQ0FBQTtBQUNwQixDQUFDO0FBRUQsU0FBUyxNQUFNLENBQUUsU0FBUztJQUN4QixPQUFPLE9BQU8sQ0FBQyxPQUFPLENBQUMsV0FBVyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUE7QUFDaEQsQ0FBQztBQUVELFNBQVMsV0FBVyxDQUFFLEtBQUs7SUFDekIsU0FBUyxDQUFDLEtBQUssRUFBRSxLQUFLLENBQUMsQ0FBQTtJQUN2QixPQUFPLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQTtBQUNqQixDQUFDO0FBRUQsU0FBUyxNQUFNLENBQUUsTUFBTTtJQUNyQixJQUFJLEtBQUssR0FBRyxPQUFPLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxDQUFBO0lBQ3JDLE9BQU8sV0FBVyxDQUFDLEtBQUssQ0FBQyxDQUFBO0FBQzNCLENBQUM7QUFFRCxNQUFNLENBQUMsT0FBTyxHQUFHO0lBQ2YsS0FBSyxFQUFFLEtBQUs7SUFDWixNQUFNLEVBQUUsTUFBTTtJQUNkLFdBQVcsRUFBRSxXQUFXO0lBQ3hCLE1BQU0sRUFBRSxNQUFNO0lBQ2QsV0FBVyxFQUFFLFdBQVc7Q0FDekIsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbIi8vIHtzaWduYXR1cmV9XG5cbnZhciBic2NyaXB0ID0gcmVxdWlyZSgnLi4vLi4vc2NyaXB0JylcbnZhciB0eXBlZm9yY2UgPSByZXF1aXJlKCd0eXBlZm9yY2UnKVxuXG5mdW5jdGlvbiBjaGVjayAoc2NyaXB0KSB7XG4gIHZhciBjaHVua3MgPSBic2NyaXB0LmRlY29tcGlsZShzY3JpcHQpXG5cbiAgcmV0dXJuIGNodW5rcy5sZW5ndGggPT09IDEgJiZcbiAgICBic2NyaXB0LmlzQ2Fub25pY2FsU2lnbmF0dXJlKGNodW5rc1swXSlcbn1cbmNoZWNrLnRvSlNPTiA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuICdwdWJLZXkgaW5wdXQnIH1cblxuZnVuY3Rpb24gZW5jb2RlU3RhY2sgKHNpZ25hdHVyZSkge1xuICB0eXBlZm9yY2UoYnNjcmlwdC5pc0Nhbm9uaWNhbFNpZ25hdHVyZSwgc2lnbmF0dXJlKVxuICByZXR1cm4gW3NpZ25hdHVyZV1cbn1cblxuZnVuY3Rpb24gZW5jb2RlIChzaWduYXR1cmUpIHtcbiAgcmV0dXJuIGJzY3JpcHQuY29tcGlsZShlbmNvZGVTdGFjayhzaWduYXR1cmUpKVxufVxuXG5mdW5jdGlvbiBkZWNvZGVTdGFjayAoc3RhY2spIHtcbiAgdHlwZWZvcmNlKGNoZWNrLCBzdGFjaylcbiAgcmV0dXJuIHN0YWNrWzBdXG59XG5cbmZ1bmN0aW9uIGRlY29kZSAoYnVmZmVyKSB7XG4gIHZhciBzdGFjayA9IGJzY3JpcHQuZGVjb21waWxlKGJ1ZmZlcilcbiAgcmV0dXJuIGRlY29kZVN0YWNrKHN0YWNrKVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgY2hlY2s6IGNoZWNrLFxuICBkZWNvZGU6IGRlY29kZSxcbiAgZGVjb2RlU3RhY2s6IGRlY29kZVN0YWNrLFxuICBlbmNvZGU6IGVuY29kZSxcbiAgZW5jb2RlU3RhY2s6IGVuY29kZVN0YWNrXG59XG4iXX0=