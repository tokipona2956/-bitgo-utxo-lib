// {pubKey} OP_CHECKSIG
var bscript = require('../../script');
var typeforce = require('typeforce');
var OPS = require('bitcoin-ops');
function check(script) {
    var chunks = bscript.decompile(script);
    return chunks.length === 2 &&
        bscript.isCanonicalPubKey(chunks[0]) &&
        chunks[1] === OPS.OP_CHECKSIG;
}
check.toJSON = function () { return 'pubKey output'; };
function encode(pubKey) {
    typeforce(bscript.isCanonicalPubKey, pubKey);
    return bscript.compile([pubKey, OPS.OP_CHECKSIG]);
}
function decode(buffer) {
    var chunks = bscript.decompile(buffer);
    typeforce(check, chunks);
    return chunks[0];
}
module.exports = {
    check: check,
    decode: decode,
    encode: encode
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3V0cHV0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL3RlbXBsYXRlcy9wdWJrZXkvb3V0cHV0LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHVCQUF1QjtBQUV2QixJQUFJLE9BQU8sR0FBRyxPQUFPLENBQUMsY0FBYyxDQUFDLENBQUE7QUFDckMsSUFBSSxTQUFTLEdBQUcsT0FBTyxDQUFDLFdBQVcsQ0FBQyxDQUFBO0FBQ3BDLElBQUksR0FBRyxHQUFHLE9BQU8sQ0FBQyxhQUFhLENBQUMsQ0FBQTtBQUVoQyxTQUFTLEtBQUssQ0FBRSxNQUFNO0lBQ3BCLElBQUksTUFBTSxHQUFHLE9BQU8sQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDLENBQUE7SUFFdEMsT0FBTyxNQUFNLENBQUMsTUFBTSxLQUFLLENBQUM7UUFDeEIsT0FBTyxDQUFDLGlCQUFpQixDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUNwQyxNQUFNLENBQUMsQ0FBQyxDQUFDLEtBQUssR0FBRyxDQUFDLFdBQVcsQ0FBQTtBQUNqQyxDQUFDO0FBQ0QsS0FBSyxDQUFDLE1BQU0sR0FBRyxjQUFjLE9BQU8sZUFBZSxDQUFBLENBQUMsQ0FBQyxDQUFBO0FBRXJELFNBQVMsTUFBTSxDQUFFLE1BQU07SUFDckIsU0FBUyxDQUFDLE9BQU8sQ0FBQyxpQkFBaUIsRUFBRSxNQUFNLENBQUMsQ0FBQTtJQUU1QyxPQUFPLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQyxNQUFNLEVBQUUsR0FBRyxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUE7QUFDbkQsQ0FBQztBQUVELFNBQVMsTUFBTSxDQUFFLE1BQU07SUFDckIsSUFBSSxNQUFNLEdBQUcsT0FBTyxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsQ0FBQTtJQUN0QyxTQUFTLENBQUMsS0FBSyxFQUFFLE1BQU0sQ0FBQyxDQUFBO0lBRXhCLE9BQU8sTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFBO0FBQ2xCLENBQUM7QUFFRCxNQUFNLENBQUMsT0FBTyxHQUFHO0lBQ2YsS0FBSyxFQUFFLEtBQUs7SUFDWixNQUFNLEVBQUUsTUFBTTtJQUNkLE1BQU0sRUFBRSxNQUFNO0NBQ2YsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbIi8vIHtwdWJLZXl9IE9QX0NIRUNLU0lHXG5cbnZhciBic2NyaXB0ID0gcmVxdWlyZSgnLi4vLi4vc2NyaXB0JylcbnZhciB0eXBlZm9yY2UgPSByZXF1aXJlKCd0eXBlZm9yY2UnKVxudmFyIE9QUyA9IHJlcXVpcmUoJ2JpdGNvaW4tb3BzJylcblxuZnVuY3Rpb24gY2hlY2sgKHNjcmlwdCkge1xuICB2YXIgY2h1bmtzID0gYnNjcmlwdC5kZWNvbXBpbGUoc2NyaXB0KVxuXG4gIHJldHVybiBjaHVua3MubGVuZ3RoID09PSAyICYmXG4gICAgYnNjcmlwdC5pc0Nhbm9uaWNhbFB1YktleShjaHVua3NbMF0pICYmXG4gICAgY2h1bmtzWzFdID09PSBPUFMuT1BfQ0hFQ0tTSUdcbn1cbmNoZWNrLnRvSlNPTiA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuICdwdWJLZXkgb3V0cHV0JyB9XG5cbmZ1bmN0aW9uIGVuY29kZSAocHViS2V5KSB7XG4gIHR5cGVmb3JjZShic2NyaXB0LmlzQ2Fub25pY2FsUHViS2V5LCBwdWJLZXkpXG5cbiAgcmV0dXJuIGJzY3JpcHQuY29tcGlsZShbcHViS2V5LCBPUFMuT1BfQ0hFQ0tTSUddKVxufVxuXG5mdW5jdGlvbiBkZWNvZGUgKGJ1ZmZlcikge1xuICB2YXIgY2h1bmtzID0gYnNjcmlwdC5kZWNvbXBpbGUoYnVmZmVyKVxuICB0eXBlZm9yY2UoY2hlY2ssIGNodW5rcylcblxuICByZXR1cm4gY2h1bmtzWzBdXG59XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBjaGVjazogY2hlY2ssXG4gIGRlY29kZTogZGVjb2RlLFxuICBlbmNvZGU6IGVuY29kZVxufVxuIl19